openapi: 3.0.0
info:
  title: Admin Service API
  description: API dla administratorów pozwalające na zarządzanie sklepem.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Admin Service

paths:
  /auth/login:
    post:
      summary: Logowanie użytkownika
      description: Umożliwia użytkownikowi zalogowanie się do systemu.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Sukces - zwraca token użytkownika
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResource"
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."

  /auth/logout:
    post:
      summary: Wylogowanie użytkownika
      description: Umożliwia użytkownikowi wylogowanie się z systemu.
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Użytkownik został pomyślnie wylogowany
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Wylogowanie przebiegło pomyślnie!"
        "401":
          description: Nieuwierzytelniony użytkownik
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."

  /auth/register/manager:
    post:
      summary: Rejestracja menedżera
      description: Umożliwia rejestrację nowego użytkownika jako menedżera.
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: Sukces - użytkownik został zarejestrowany
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Rejestracja zakończona sukcesem!"
        "422":
          description: Nieprawidłowe dane rejestracyjne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateResponse"

  /auth/register/moderator:
    post:
      summary: Rejestracja moderatora
      description: Umożliwia rejestrację nowego użytkownika jako moderatora.
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: Sukces - użytkownik został zarejestrowany
        "422":
          description: Nieprawidłowe dane rejestracyjne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateResponse"

  /auth/register/seller:
    post:
      summary: Rejestracja sprzedawcy
      description: Umożliwia rejestrację nowego użytkownika jako sprzedawcy.
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
      responses:
        "201":
          description: Sukces - użytkownik został zarejestrowany
        "422":
          description: Nieprawidłowe dane rejestracyjne
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateResponse"

  /auth/change-password:
    post:
      summary: Zmiana hasła użytkownika
      description: Umożliwia zalogowanemu użytkownikowi zmianę hasła.
      tags:
        - Auth
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Hasło zostało pomyślnie zmienione
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Hasło zostało zmienione!"
        "401":
          description: Niepoprawne obecne hasło
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /categories:
    get:
      tags:
        - Category
      summary: Pobierz listę kategorii
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista kategorii

    post:
      tags:
        - Category
      summary: Utwórz nową kategorię
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StoreCategoryRequest"
            example:
              name: "Monitory"
      responses:
        "201":
          description: Kategoria została utworzona
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreCategoryRequest"
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."

  /categories/{id}:
    get:
      tags:
        - Category
      summary: Pobierz szczegóły kategorii
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Szczegóły kategorii
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono kategorii

    put:
      tags:
        - Category
      summary: Zaktualizuj kategorię
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCategoryRequest"
            example:
              name: "Monitory LED"
      responses:
        "200":
          description: Kategoria została zaktualizowana
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono kategorii
        "409":
          description: Konflikt danych (np. zduplikowana nazwa)

    delete:
      tags:
        - Category
      summary: Usuń kategorię
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Kategoria została usunięta
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono kategorii
        "409":
          description: Konflikt — nie można usunąć kategorii

  /products:
    get:
      tags:
        - Product
      summary: Wyszukaj produkty
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: integer
        - in: query
          name: order_by
          schema:
            type: string
            enum: [price_asc, price_desc, created_at_asc, created_at_desc]
        - in: query
          name: page
          schema:
            type: integer
      responses:
        "200":
          description: Lista produktów

    post:
      tags:
        - Product
      summary: Utwórz nowy produkt
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/StoreProductRequest"
      responses:
        "201":
          description: Produkt utworzony
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResource"
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."

  /products/search/details:
    get:
      tags:
        - Product
      summary: Pobierz dane pomocnicze do wyszukiwarki
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Dane wyszukiwania
        "401":
          description: Brak autoryzacji

  /products/{id}:
    get:
      tags:
        - Product
      summary: Pobierz szczegóły produktu
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Szczegóły produktu
        "401":
          description: Brak autoryzacji
        "404":
          description: Produkt nie znaleziony

    post:
      tags:
        - Product
      summary: Zaktualizuj produkt
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProductRequest"
      responses:
        "200":
          description: Produkt zaktualizowany
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."
        "404":
          description: Nie znaleziono
        "409":
          description: Konflikt danych

    delete:
      tags:
        - Product
      summary: Usuń produkt
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Produkt usunięty
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono
        "409":
          description: Konflikt danych

  /products/get:
    post:
      tags:
        - Product
      summary: Pobierz produkty po ID
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProductRequest"
            example:
              product_ids: [1, 2, 3]
      responses:
        "200":
          description: Lista produktów
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."
        "404":
          description: Nie znaleziono

  /promotions:
    post:
      tags:
        - Promotion
      summary: Tworzenie nowej promocji
      description: Tworzy nową promocję dla produktu.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorePromotionRequest"
      responses:
        "201":
          description: Promocja została utworzona
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionResource"
        "401":
          description: Brak autoryzacji
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized"
        "422":
          description: Błąd walidacji danych
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: "The name field is required."

  /promotions/{id}:
    put:
      tags:
        - Promotion
      summary: Aktualizacja promocji
      description: Aktualizuje dane istniejącej promocji.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID promocji
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePromotionRequest"
      responses:
        "200":
          description: Promocja została zaktualizowana
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromotionResource"
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono promocji
        "422":
          description: Błąd walidacji

    delete:
      tags:
        - Promotion
      summary: Usuwanie promocji
      description: Usuwa wybraną promocję.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID promocji
          schema:
            type: integer
      responses:
        "204":
          description: Promocja została usunięta
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono promocji

  /orders/active:
    get:
      tags:
        - Order
      summary: Pobierz aktywne zamówienia
      description: Zwraca listę aktywnych zamówień z paginacją.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista aktywnych zamówień
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderCollection"
              example:
                data:
                  - id: "1"
                    product_ids: [10, 15]
                    status: "pending"
                    amount: 199.99
                    user_id: 3
                    address_id: 5
                    invoices_id: 7
                  - id: "2"
                    product_ids: [12]
                    status: "preparation"
                    amount: 89.50
                    user_id: 3
                    address_id: 5
                    invoices_id: 8
                links:
                  self: "https://example.com/api/orders/active?page=1"
                  next: "https://example.com/api/orders/active?page=2"
                  prev: null
                meta:
                  current_page: 1
                  last_page: 5
                  per_page: 10
                  total: 45

        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono zamówień

  /orders/{orderId}/status:
    patch:
      tags:
        - Order
      summary: Zmień status zamówienia
      description: Aktualizuje status wybranego zamówienia.
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          description: ID zamówienia
          schema:
            type: string
            example: "1"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeOrderStatusRequest"
            example:
              status: "sent"
      responses:
        "200":
          description: Zamówienie zostało zaktualizowane
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResource"
              example:
                id: "1"
                product_ids: [10, 15]
                status: "sent"
                amount: 199.99
                user_id: 3
                address_id: 5
                invoices_id: 7
        "401":
          description: Brak autoryzacji
        "404":
          description: Nie znaleziono zamówienia
        "409":
          description: Konflikt — nieprawidłowy status

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "manager@example.com"
        password:
          type: string
          example: "123456789"

    RegisterUserRequest:
      type: object
      required:
        - email
        - first_name
        - last_name
        - password
        - repeat_password
      properties:
        email:
          type: string
          format: email
          example: "test@example.com"
        first_name:
          type: string
          example: "Jan"
        last_name:
          type: string
          example: "Kowalski"
        password:
          type: string
          example: "HasloBezpieczne123"
        repeat_password:
          type: string
          example: "HasloBezpieczne123"

    ChangePasswordRequest:
      type: object
      required:
        - password
        - new_password
        - repeat_new_password
      properties:
        password:
          type: string
          example: "StareHaslo123"
        new_password:
          type: string
          example: "NoweHaslo456"
        repeat_new_password:
          type: string
          example: "NoweHaslo456"

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Wystąpił błąd!"

    ValidateResponse:
      type: object
      properties:
        message:
          type: string
          example: "Wystąpił błąd!"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            email: ["Podany email jest już zajęty."]
            password: ["Hasło musi mieć co najmniej 9 znaków."]

    UserResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: "Jan"
        last_name:
          type: string
          example: "Kowalski"
        email:
          type: string
          format: email
          example: "manager@example.com"
        role:
          $ref: "#/components/schemas/RoleResource"

    LoginResource:
      type: object
      properties:
        token:
          type: string
          example: "2|O3R9kNQs8vBgQYQ02pIg3n5xN01CrqLdE51simni956abfbb"
        user_details:
          $ref: "#/components/schemas/UserResource"

    RoleResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "manager"

    StoreCategoryRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    UpdateCategoryRequest:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    StoreProductRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category_id:
          type: integer
        main_image:
          type: string
          format: binary
        additional_images:
          type: array
          items:
            type: string
            format: binary
      required:
        - name
        - description
        - price
        - category_id
        - main_image

    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category_id:
          type: integer
        main_image:
          type: string
          format: binary
        additional_images:
          type: array
          items:
            type: string
            format: binary
        deleted_images:
          type: array
          items:
            type: string
            format: binary
      required:
        - name
        - description
        - price
        - category_id
        - main_image

    GetProductRequest:
      type: object
      properties:
        product_ids:
          type: array
          items:
            type: integer
      required:
        - product_ids

    StorePromotionRequest:
      type: object
      required:
        - new_price
        - expiration_date
        - product_id
      properties:
        new_price:
          type: number
          format: float
          minimum: 0
        expiration_date:
          type: string
          format: date
        product_id:
          type: integer

    UpdatePromotionRequest:
      type: object
      required:
        - new_price
        - expiration_date
      properties:
        new_price:
          type: number
          format: float
          minimum: 0
        expiration_date:
          type: string
          format: date

    PromotionResource:
      type: object
      properties:
        id:
          type: integer
        new_price:
          type: number
        expiration_date:
          type: string
          format: date
        product:
          $ref: "#/components/schemas/ProductResource"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ProductResource:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ChangeOrderStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - pending
            - preparation
            - sent
            - completed
            - cancelled
          example: "sent"

    OrderResource:
      type: object
      properties:
        id:
          type: string
          example: "1"
        product_ids:
          type: array
          items:
            type: integer
          example: [10, 15]
        status:
          type: string
          example: "sent"
        amount:
          type: number
          format: float
          example: 199.99
        user_id:
          type: integer
          example: 3
        address_id:
          type: integer
          example: 5
        invoices_id:
          type: integer
          example: 7

    OrderCollection:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/OrderResource"
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
              example: "https://example.com/api/orders/active?page=1"
            next:
              type: string
              format: uri
              nullable: true
              example: "https://example.com/api/orders/active?page=2"
            prev:
              type: string
              format: uri
              nullable: true
              example: null
        meta:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            last_page:
              type: integer
              example: 5
            per_page:
              type: integer
              example: 10
            total:
              type: integer
              example: 45
